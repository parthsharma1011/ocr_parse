name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest pytest-cov flake8
    
    - name: Lint with flake8
      run: |
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    
    - name: Create test directories
      run: |
        mkdir -p Data Output
        echo "Test directories created"
    
    - name: Run basic import test
      run: |
        python -c "
        try:
            from pdf_ocr import GeminiPDFOCR
            print('✅ Successfully imported GeminiPDFOCR')
        except ImportError as e:
            print(f'❌ Import failed: {e}')
            exit(1)
        "
    
    - name: Test configuration loading
      run: |
        python -c "
        import config
        print('✅ Configuration loaded successfully')
        "
    
    - name: Test utilities
      run: |
        python -c "
        import utils
        print('✅ Utils module loaded successfully')
        "

  security-scan:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    
    - name: Install security tools
      run: |
        pip install bandit safety
    
    - name: Run Bandit security scan
      run: |
        bandit -r . -f json -o bandit-report.json || true
        bandit -r . || true
    
    - name: Check for known vulnerabilities
      run: |
        safety check || true

  build:
    runs-on: ubuntu-latest
    needs: [test, security-scan]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Create application structure
      run: |
        mkdir -p dist
        cp *.py dist/
        cp requirements.txt dist/
        echo "Application packaged successfully"
    
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: ocr-app
        path: dist/